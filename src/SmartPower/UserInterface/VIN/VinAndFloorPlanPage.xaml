<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:IDS.UI.Shared.Views.Controls;assembly=ids.ui"
    xmlns:resources="clr-namespace:SmartPower.Resources;assembly=SmartPower"
    xmlns:vm="clr-namespace:SmartPower.UserInterface.VIN;assembly=SmartPower"
    xmlns:xctConverters="clr-namespace:Xamarin.CommunityToolkit.Converters;assembly=Xamarin.CommunityToolkit"
    xmlns:xctBehaviors="clr-namespace:Xamarin.CommunityToolkit.Behaviors;assembly=Xamarin.CommunityToolkit"
    xmlns:fontAwesome="clr-namespace:SmartPower.Resources.FontAwesome;assembly=SmartPower"
    xmlns:xctEffects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
    x:Class="SmartPower.UserInterface.VIN.VinAndFloorPlanPage"
    x:DataType="vm:VinAndFloorPlanViewModel"
    xctEffects:StatusBarEffect.Color="{x:DynamicResource Primary}"
    xctEffects:StatusBarEffect.Style="LightContent"
    Title="{x:Static resources:Strings.title_vin_and_floorplan}" >

    <ContentPage.Resources>
        <xctConverters:IsNotNullOrEmptyConverter x:Key="IsNotNullConverter"/>
        <xctConverters:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding GoToSettingsCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="{x:StaticResource FontAwesomeSolid}"
                                 Glyph="{x:Static fontAwesome:Icon.FACog}"
                                 Color="{x:DynamicResource OnPrimary}"
                                 Size="20" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <FlexLayout Direction="Row"
                JustifyContent="Center"
                AlignContent="Center"
                AlignItems="Center"
                Wrap="Wrap"
                Margin="20">

        <Label Style="{StaticResource labelBold}"
               FlexLayout.Basis="100%"
               Padding="0,0,0, 8"
               HorizontalTextAlignment="Start"
               Text="{x:Static resources:Strings.enter_or_scan_vin}">
            <Label.Triggers>
                <DataTrigger TargetType="Label" Binding="{Binding VinError, Converter={StaticResource IsNotNullConverter}}" Value="True">
                    <Setter Property="TextColor" Value="{DynamicResource Error}"/>
                </DataTrigger>
            </Label.Triggers>
        </Label>

        <Grid FlexLayout.Basis="100%"
              HeightRequest="60">

            <controls:AdvancedEntry x:Name="VinField"
                                    OutlineColor="{DynamicResource NeutralVariant70}"
                                    OutlineWidth="1"
                                    CornerRadius="3"
                                    RoundedCorners="All"
                                    Padding="10,10,50,10"
                                    ShowUnderline="False"
                                    MaxLength="{Binding MaxLength}"
                                    Placeholder="{x:Static resources:Strings.enter_vin}" 
                                    Text="{Binding Vin}"
                                    IsFocused="{Binding IsEditing, Mode=OneWayToSource}"
                                    TextColor="{x:DynamicResource OnSurface}">
                <controls:AdvancedEntry.Triggers>
                    <DataTrigger TargetType="controls:AdvancedEntry" Binding="{Binding VinError, Converter={StaticResource IsNotNullConverter}}" Value="True">
                        <Setter Property="OutlineColor" Value="{DynamicResource Error}"/>
                        <Setter Property="OutlineWidth" Value="2"/>
                    </DataTrigger>
                </controls:AdvancedEntry.Triggers>
            </controls:AdvancedEntry>

            <controls:SvgImageView WidthRequest="30"
                                   HeightRequest="30"
                                   HorizontalOptions="End"
                                   Margin="0, 0, 10, 0"
                                   ImageSource="resource://SmartPower.Resources.Images.camera.svg?assembly=SmartPower" >
                <controls:SvgImageView.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ScanCommand}"/>
                </controls:SvgImageView.GestureRecognizers>
            </controls:SvgImageView>
        </Grid>

        <BoxView FlexLayout.Basis="100%"
                 HeightRequest="20"
                 Background="{x:DynamicResource BackgroundColor}"
                 IsVisible="{Binding VinError, Converter={StaticResource IsNullOrEmptyConverter}}" />
        
        <Label FlexLayout.Basis="100%"
               HeightRequest="20"
               IsVisible="{Binding VinError, Converter={StaticResource IsNotNullConverter}}"
               Text="{Binding VinError}"
               FontSize="13"
               TextColor="{DynamicResource Error}"/>


        <Label Style="{StaticResource labelBold}"
               FlexLayout.Basis="100%"
               Padding="0,0,0, 8"
               HorizontalTextAlignment="Start"
               Text="{x:Static resources:Strings.select_model}" />

        <Frame Style="{StaticResource entryFrame}"
               FlexLayout.Basis="100%"
               HeightRequest="60">
            <Picker Margin="2"
                    TextColor="{x:DynamicResource OnSurface}"
                    BackgroundColor="{x:DynamicResource Surface}"
                    IsEnabled="{Binding IsValidVin}"
                    ItemsSource="{Binding Models}"
                    SelectedItem="{Binding SelectedModel}" >
                <Picker.Behaviors>
                    <xctBehaviors:EventToCommandBehavior
                        EventName="SelectedIndexChanged"
                        Command="{Binding CreateFloorPlanListCommand}" />
                </Picker.Behaviors>
            </Picker>
        </Frame>


        <Label Style="{StaticResource labelBold}"
               FlexLayout.Basis="100%"
               Padding="0,20,0, 8"
               HorizontalTextAlignment="Start"
               Text="{x:Static resources:Strings.select_floorplan}" />

        <Frame Style="{StaticResource entryFrame}"
               FlexLayout.Basis="100%"
               HeightRequest="60">
            <Picker Margin="2" 
                    TextColor="{x:DynamicResource OnSurface}"
                    BackgroundColor="{x:DynamicResource Surface}"
                    IsEnabled="{Binding CanEditFloorplan}"
                    ItemsSource="{Binding FloorPlans}"
                    SelectedItem="{Binding SelectedFloorPlan}">
            </Picker>
        </Frame>


        <ContentView FlexLayout.Basis="100%"
                     Padding="0, 20, 0, 0">

            <controls:RoundedButtonControl HorizontalOptions="FillAndExpand"
                                           VerticalOptions="FillAndExpand"
                                           HeightRequest="56"
                                           FontSize="16"
                                           FontAttributes="Bold"
                                           TextTransform="Uppercase"
                                           BorderWidth="1"
                                           Text="{x:Static resources:Strings.start}"
                                           TextColor="{x:DynamicResource OnPrimary}"
                                           BorderColor="{x:DynamicResource Primary}"
                                           ButtonBackgroundColor="{x:DynamicResource Primary}"
                                           DisableTextColor="{x:DynamicResource Outline}"
                                           IsEnabled="{Binding StartButtonEnabled}"
                                           Command="{Binding StartCommand}" />
        </ContentView>
    </FlexLayout>
</ContentPage>
